[{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/rsat/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"rsat: Tools for Downloading, Customizing, and Processing Time Series of Satellite Images from Landsat, MODIS, and Sentinel. Copyright (C) 2021 U Pérez - Goya, M Montesino - SanMartin, A F Militino, M D Ugarte  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. rsat Copyright (C) 2021 U Pérez - Goya, M Montesino - SanMartin, A F Militino, M D Ugarte This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"search","dir":"Articles","previous_headings":"","what":"Search","title":"1. Search","text":"rsat, searching means locating satellite images desired data product given region time interest (referred roi toi henceforth). Searching requires getting access satellite imagery search (Section 2), .e. finding, previewing, filtering available information roi toi.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"profiles","dir":"Articles","previous_headings":"Search > Getting access","what":"Profiles","title":"1. Search","text":"rsat communicates two public data archives Application Programming Interfaces (APIs). registration following online portals required get full access satellite images rsat; USGS USGS sole science agency Department Interior United States. Provide access Modis Images. information USGS can found . EarthData: repository NASA’s earth observation data-sets. information EarthData can found . SciHub, web service giving access Copernicus’ scientific data hub. Please go find details data hub. convenience, try use username password . satisfy criteria web services make sure username \\(4\\) characters long includes period, number underscore. password must \\(12\\) character long include characters least one capital letter, numbers.","code":""},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"credentials-management","dir":"Articles","previous_headings":"Search > Getting access","what":"Credentials management","title":"1. Search","text":"Two functions deal usernames passwords various APIs considered rsat; set_credentials() print_credentials(). former defines username (first argument) password (second argument) used portal (third argument): latter prints usernames passwords saved current R session: usernames passwords portals, can set single instruction:","code":"library(rsat) set_credentials(\"rsat.package\",\"UpnaSSG.2021\", \"scihub\") set_credentials(\"rsat.package\",\"UpnaSSG.2021\", \"earthdata\") print_credentials() set_credentials(\"rsat.package\",\"UpnaSSG.2021\")"},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"finding-data-records","dir":"Articles","previous_headings":"Search > Doing a search > Simple search","what":"Finding data records","title":"1. Search","text":"function rsat_search() performs search satellite imagery. One way use function providing; (1) geo-referenced polygon (sf class object), (2) initial final dates relevant time period (date vector), (3) name(s) satellite data product(s) (character vector). rsat gives access several satellite data products. Among , surface reflectance products frequently used applied research studies. names : Landsat program: Landsat 4-5 mission: \"LANDSAT_TM_C1\" Landsat-7 mission: \"LANDSAT_ETM_C1\" Landsat-8 mission: \"LANDSAT_8_C1\" MODIS program: Terra satellite: \"mod09ga\" Aqua satellite: \"myd09ga\" Sentinel program: Sentinel-2 mission: \"S2MSI2A\" Sentinel-3 mission: \"SY_2_SYN___\" details products names can found , , Landsat, MODIS, Sentinel respectively. package can search download data multispectral images (e.g., radar) although goes beyond scope current status package. following code looks satellite images (surface reflectance) region norther Spain captured first half January \\(2021\\), captured MODIS: search can involve several products simultaneously. addition MODIS, instruction also considers images Sentinel-3: output rsat_search() records object. object stores search results metadata various APIs standardized manner. records works vector every element vector refers image. Information image saved following slots: sat (character): name satellite (e.g., Landsat, MODIS, Sentinel-2, Sentinel-3, etc.). name (character): name file. date (Date): capturing date image. product (character): name data product. path (numeric): horizontal location tile (MODIS/Landsat ). row (numeric): vertical location tile (MODIS/Landsat ). tileid (character): tile identification number (Sentinel ). download (character): download URL. file_path (character): relative path local store image. preview (character): preview URL. api_name (character): name API internally used rsat. order (boolean): TRUE, image needs ordered download. extent_crs (extent_crs): coordinate reference system preview. can extract relevant slots records using specific functions sat_name(), names(), dates():","code":"data(\"ex.navarre\") toi <- as.Date(\"2021-01-01\") + 0:15 rcd <- rsat_search(region = ex.navarre,                    product = c(\"mod09ga\"),                    dates = toi) rcd <- rsat_search(region = ex.navarre,                    product = c(\"mod09ga\", \"SY_2_SYN___\"),                    dates = toi) class(rcd) unique(sat_name(rcd)) names(rcd)[1] unique(dates(rcd))"},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"filtering-search-results","dir":"Articles","previous_headings":"Search > Doing a search","what":"Filtering search results","title":"1. Search","text":"mentioned earlier, records object behaves like vector. works common R methods c(), [], length(), subset(), unique(). methods allow filter tinker search results. Selecting filtering satellite images specially powerful combined visualization (see ). Discarding useless images stage process can save memory space processing time. instance, code counts results found mission: first, second, third argument subset() correspond , (1) records object, (2) name slot used subsetting, (3) value slot interested . next lines code show advance filtering example new records built images captured missions dates: records can coerced data.frame .data.frame() transformed back .records(). rows columns data.frame correspond satellite images slots respectively:","code":"mod.rcd <- subset(rcd, \"sat\", \"Modis\") sn3.rcd <- subset(rcd, \"sat\", \"Sentinel-3\") length(mod.rcd) length(sn3.rcd) mod.mtch <- mod.rcd[dates(mod.rcd) %in% dates(sn3.rcd)] sn3.mtch <- sn3.rcd[dates(sn3.rcd) %in% dates(mod.rcd)] rcd <- c(mod.mtch, sn3.mtch) rcd.df <- as.data.frame(rcd) dim(rcd.df) names(rcd.df) # rcd <- as.records(rcd.df) # class(rcd)"},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"previewing-search-results","dir":"Articles","previous_headings":"Search > Doing a search","what":"Previewing search results","title":"1. Search","text":"rsat package provides plot() method satellite records. displays preview satellite images, .e low-resolution versions satellite images. Previewing can help decide whether actual image, much heavier preview, worth downloading. Cloudy images frequently useless can removed records object using vector-like methods (see previous section). instance, code displays first \\(10\\) records , based visual evaluation cloud coverage, removes \\(9^{th}\\) image records: Sometimes, might difficult spot location region interest previews. roi polygon can passed plot() function using region argument. Additionally, plot() method rsat wrapper function tmap accepts inputs tm_raster() tm_polygon(). arguments preceded tm.raster tm.polygon identifiers. instruction leverages preview fullest. shows RGB satellite image preview roi superposed (), red border color (tm.polygon.region.border.col = \"red\") fill (tm.polygon.region.alpha = 0). compass (compass.rm = TRUE) scale bar (scale.bar.rm = TRUE) removed:","code":"prview <- plot(rcd[1:12]) prview rcd <- rcd[-9] plot(rcd[1:6],      region = ex.navarre,      tm.polygon.region.border.col = \"red\",      tm.polygon.region.alpha = 0,      compass.rm = T,      scale.bar.rm = T)"},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"the-rtoi","dir":"Articles","previous_headings":"Search > Advanced search","what":"The rtoi","title":"1. Search","text":"Sometimes, regions located intersection images large fit single scene. situations, working separate files might cumbersome. solution, rsat provides rtoi class object. rtoi project study-case associated region time interest (hence name). rtoi consists following elements: name: project identifier. region: georeferenced polygon (sf class object). db_path: path database, .e. folder raw satellite images generic purposes. rtoi_path: path dataset, .e. folder customized/processed. records: vector satellite records relevant study. showcase, ’ll assess effects Storm Filomena Iberian peninsula terms snow coverage. storm extreme meteorological event (largest since 1971, according AEMET). storm swept peninsula January \\(6^{th}\\) \\(11^{th}\\), \\(2021\\). code generates bounding box around peninsula (ip) limits study period (toi) immediate dates storm: new rtoi requires least elements \\(1\\) \\(4\\). following lines generate programmatically database dataset folders: function new_rtoi() builds new rtoi elements mentioned : new_rtoi() function writes set files representing copy R object (filomena.rtoi) shapefile roi (region): file updated whenever rtoi modified. Thus, R session accidentally breaks closes, last version rtoi saved hard drive can loaded read_rtoi(): Printing rtoi provides summary region time interest, summary relevant records analysis, paths database dataset:","code":"ip <- st_sf(st_as_sfc(st_bbox(c(   xmin = -9.755859,   xmax =  4.746094,   ymin = 35.91557,   ymax = 44.02201  ), crs = 4326)))  toi <- seq(as.Date(\"2021-01-10\"),as.Date(\"2021-01-15\"),1) db.path <- file.path(tempdir(),\"database\") ds.path <- file.path(tempdir(),\"datasets\") dir.create(db.path) dir.create(ds.path) filomena <- new_rtoi(name = \"filomena\",                      region = ip,                      db_path = db.path,                      rtoi_path = ds.path) rtoi.files <- list.files(file.path(ds.path, \"filomena\"), full.name = TRUE) rtoi.files filomena <- read_rtoi(file.path(ds.path, \"filomena\")) print(filomena)"},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"search-with-an-rtoi","dir":"Articles","previous_headings":"Search > Advanced search","what":"Search with an rtoi","title":"1. Search","text":"can use rtoi search satellite images rsat_search(): rtoi S6 class object, behaves like object programming languages. , rtoi passed argument modifies rtoi, object main environment also updated. function rsat_search() places resulting records rtoi: Since rtoi modified, rtoi.file also updated: extract records rtoi use records(): want apply filters results, shown previous section, need extract records rtoi first apply c(), [], subset(), length() convenience.","code":"toi <- as.Date(\"2021-01-10\") + 0:5 rsat_search(region = filomena,             product = c(\"mod09ga\", \"SY_2_SYN___\"),             dates = toi) print(filomena) file.info(rtoi.files[1])$ctime # creation time file.info(rtoi.files[1])$mtime # modification time rcds <- records(filomena) class(rcds)"},{"path":"https://docs.ropensci.org/rsat/articles/rsat1_search.html","id":"displaying-results","dir":"Articles","previous_headings":"Search > Advanced search","what":"Displaying results","title":"1. Search","text":"plot() method rtois sophisticated. \"preview\" mode shows low-resolution RGB version satellite images. plot binds together satellite images available given date roi, function allows arguments, product dates, better select information shown: rtois designed save information several missions. mode = \"dates\" prints calendar indicating availability satellite images one multiple missions time interest: following vignette explains download satellite images role database managing multiple rtois. reduce processing times memory space, showcase restricted MODIS images onward:","code":"plot(filomena,      \"preview\",      product = \"mod09ga\",      dates = \"2021-01-11\") plot(filomena, \"dates\") rcd <- records(filomena) records(filomena) <- subset(rcd, \"product\", \"mod09ga\")"},{"path":"https://docs.ropensci.org/rsat/articles/rsat2_download.html","id":"download","dir":"Articles","previous_headings":"","what":"Download","title":"2. Download","text":"Downloading implies acquiring saving list satellite images records machine. demo builds showcase search vignette , first section reviews important code previous vignette. second section explains obtain satellite images rsat. last section mentions rtois designed favor collaborative efforts save downloading time.","code":""},{"path":"https://docs.ropensci.org/rsat/articles/rsat2_download.html","id":"review","dir":"Articles","previous_headings":"Download","what":"Review","title":"2. Download","text":"first step rsat’s workflow specifying credentials web services: showcase aims assessing effect Snowstorm Filomena Iberian peninsula January \\(10^{th}\\) \\(15^{th}\\), \\(2021\\). Hence, roi toi correspond sf polygon around peninsula (ip) vector dates (toi) covering time-span: folders database dataset can created programmatically follows: minimum information generate new rtoi name, polygon roi, paths database dataset: limit amount data processing times, assessment conducted MODIS imagery. total number \\(24\\) images found region \\(6\\)-day period:","code":"library(rsat) set_credentials(\"rsat.package\",\"UpnaSSG.2021\") ip <- st_sf(st_as_sfc(st_bbox(c(   xmin = -9.755859,   xmax =  4.746094,   ymin = 35.91557,   ymax = 44.02201  ), crs = 4326))) toi <- seq(as.Date(\"2021-01-10\"),as.Date(\"2021-01-15\"),1) db.path <- file.path(tempdir(),\"database\") ds.path <- file.path(tempdir(),\"datasets\") dir.create(db.path) dir.create(ds.path) filomena <- new_rtoi(name = \"filomena\",                      region = ip,                      db_path = db.path,                      rtoi_path = ds.path) rsat_search(region = filomena, product = c(\"mod09ga\"), dates = toi)"},{"path":"https://docs.ropensci.org/rsat/articles/rsat2_download.html","id":"image-acquisition","dir":"Articles","previous_headings":"Download","what":"Image acquisition","title":"2. Download","text":"Downloading straightforward function rsat_download(). simplest way use function passing rtoi input. Depending speed internet connection, following instruction may take several minutes run: function saves satellite images automatically database. path database provided rtoi: Another way download images using records. variant requires defining path saving resulting files (.dir). next line equivalent rtoi version using records class object: second time, message reveals function reads database first checks images rtoi already available destination path. available, function skips download. feature becomes handy teams share common database.","code":"rsat_download(filomena) list.files(get_database(filomena), recursive = TRUE) rsat_download(records(filomena), out.dir = get_database(filomena))"},{"path":"https://docs.ropensci.org/rsat/articles/rsat2_download.html","id":"collaborative-rtois","dir":"Articles","previous_headings":"Download","what":"Collaborative rtois","title":"2. Download","text":"rtoi leverages collective use package different working groups within different institutions. Teams working separate studies rtois can refer database increasing size time. database can progressively turn local repository. Eventually, new rtois may find requested information local database, skipping download, saving processing time. encourage rsat users develop common databases possible shared machines. rtoi architecture role collaborative work following vignette explains customize satellite images turn raw data valuable information aim analysis.","code":""},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"customize","dir":"Articles","previous_headings":"","what":"Customize","title":"3. Customize","text":"Customizing means transforming raw images useful information particular needs. Customizing includes; (1) mosaicking, .e. joining scenes region date single file , (2) calculating index highlight presence process/material satellite image, (3) mask cloudy pixels avoid misinterpreting surface reflectance values. demo builds showcase search vignette , first section reviews important code previous vignette.","code":""},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"review","dir":"Articles","previous_headings":"Customize","what":"Review","title":"3. Customize","text":"first step rsat’s workflow specifying credentials web services: showcase aims assessing effect Snowstorm Filomena Iberian peninsula January \\(10^{th}\\) \\(15^{th}\\), \\(2021\\). Hence, roi toi correspond sf polygon around peninsula (ip) vector dates (toi) covering time-span: folders database dataset can created programmatically follows: minimum information generate new rtoi name object, polygon region interest (roi), paths database dataset: limit amount data processing times, assessment conducted MODIS imagery. total number \\(24\\) images found region \\(6\\)-day period: way download search results follows:","code":"library(rsat) set_credentials(\"rsat.package\",\"UpnaSSG.2021\") ip <- st_sf(st_as_sfc(st_bbox(c(   xmin = -9.755859,   xmax =  4.746094,   ymin = 35.91557,   ymax = 44.02201  ), crs = 4326))) toi <- seq(as.Date(\"2021-01-10\"),as.Date(\"2021-01-15\"),1) db.path <- file.path(tempdir(),\"database\") ds.path <- file.path(tempdir(),\"datasets\") dir.create(db.path) dir.create(ds.path) filomena <- new_rtoi(name = \"filomena\",                      region = ip,                      db_path = db.path,                      rtoi_path = ds.path) rsat_search(region = filomena, product = c(\"mod09ga\"), dates = toi) rsat_download(filomena)"},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"mosaic","dir":"Articles","previous_headings":"Customize","what":"Mosaic","title":"3. Customize","text":"Mosaicking involves binding together several images region date. function mosaic() finds automatically relevant images database joins together single file. Additionally, default, function crops around roi rtoi remove unnecessary information save space hard disk drive: cropping option can disabled argument warp = NULL. , cropping appropriate since images extend far beyond region interest. results saved rtoi_path inside Modis/mod09ga/mosaic (.e. constellation_name/data_product_name/mosaic). first time workflow rtoi_path used. reason mosaicking first transformation applied raw images better fit particular needs analysis. outcomes mosaic compressed (zip) minimize size: point workflow, RGB representations satellite images can displayed fly, without loading entire image R. default, plot() method rtoi displays mosaicked images object followed words \"preview\" \"date\" (see types plots rtoi search vignette): map shows sample pixels original image. strategy save space RAM memory. downside reduction level detail image. default, number pixels horizontal vertical axis \\(250\\). arguments xsize ysize change size sample vary crispness image. code doubles number pixels axis image; Clouds snow visually similar. False color images frequently used field order ease detection features. False color images switch natural color RGB image bands. kind representations can built using band_name argument followed name bands replacing red, green, blue colors. instance, rendering swir1, nir, blue highlights snow blue color:","code":"rsat_mosaic(filomena) list.files(file.path(ds.path, \"filomena\", \"Modis/mod09ga/mosaic\"), full.name = TRUE) plot(filomena, as.Date(\"2021-01-11\")) plot(filomena, as.Date(\"2021-01-11\"),xsize = 500, ysize = 500) plot(filomena,      as.Date(\"2021-01-11\"),      xsize = 500,      ysize = 500,      band_name = c(\"swir1\", \"nir\", \"blue\"))"},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"definition","dir":"Articles","previous_headings":"Customize > Index calculation","what":"Definition","title":"3. Customize","text":"remote sensing index indicator reveals presence material satellite image. Indexes result simple math applied bands image. computation involves bands distinctively high low reflectance feature hand. years, researchers developed wide variety indexes different materials processes can consulted . instance, Normalized Difference Snow Index (NDSI) (see e.g., (Salomonson Appel 2004)) highlights snow using green shortwave-infrared bands (around \\(1.5 \\mu m\\)). subtraction two bands gives large number pixels depicting snow. denominator ensures values oscillate \\(-1\\) \\(1\\). \\[ NDSI = \\frac{Green - SWIR1}{Green + SWIR1}\\]","code":""},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"calculation","dir":"Articles","previous_headings":"Customize > Index calculation","what":"Calculation","title":"3. Customize","text":"R can create function replicating calculation NDSI index: rsat demands formulas use band names, e.g. red, green, blue, etc. rather band number. Band names numbers differ among mission/satellites. instance, green corresponds band number \\(4\\) MODIS Landsat-7, number \\(3\\) Landsat-8 Sentinel-2, number \\(6\\) Sentinel-3 (see ). Using names enables use unique custom function across satellites/missions. rsat functions responsible linking name corresponding band number according mission. widespread variables built-package list variables can printed using; use NDSI() function series satellite images Iberian peninsula, use function derive() follows; , can plot results without loading scenes R: NDSI index improves separability clouds snow. However, might difficulties distinguishing certain parts image. solution, next step removes cloud-covered pixels.","code":"NDSI = function(green, swir1){   ndsi <- (green - swir1)/(green + swir1)   return(ndsi) } show_variables() rsat_derive(filomena, product = \"mod09ga\", variable = \"ndsi\", fun = NDSI) plot(filomena,      as.Date(\"2021-01-11\"),      variable = \"ndsi\",      xsize = 500,      ysize = 500,      zlim = c(-1,1))"},{"path":"https://docs.ropensci.org/rsat/articles/rsat3_customize.html","id":"cloud-removal","dir":"Articles","previous_headings":"Customize","what":"Cloud removal","title":"3. Customize","text":"data providers apply algorithms data-sets detect presence clouds (Level 1/2 products). analysis part quality assessment done pre-processing results included Quality Assurance (QA) band image. addition cloud coverage, band provides information -saturated filled pixels. information packed band using bit format. function cloud_mask() interprets QA band obtain images showing presence/absence clouds. application straightforward; apply cloud mask, need import NDSI images R using get_raster() function. values index must truncated \\(-1\\) \\(1\\) avoid values outside feasible range (sun reflections mirror-like surfaces, water, can lead misleading results): every image rtoi, cloud_mask() function generates new image, called mask, \\(1\\)s \\(NA\\)s indicate clear covered pixels. function identifies mission/program applies appropriate interpretation bits create cloud mask. import result run; MODIS, cloud-masks different resolution multispectral image. adjust resolution, resample cloud mask match resolution NDSI images (resample()) using nearest neighbor method (\"ngb\"): apply cloud mask, just multiply series pixels. Dot multiplications performed pixel-wise. NDSI values multiplied \\(1\\) remain unaltered multiplied \\(NA\\) become missing: attempt obtain composite image, extract maximum value NDSI pixel time series. Maximum value compositions frequent field (Holben 1986). Compositing way summarize information time-lapse ignore presence clouds: Represent results: results completely satisfactory. image shows unfilled gaps pixels valid information along time-series. following vignette explains process images fill gaps smooth outliers.","code":"rsat_cloudMask(filomena) ndsi.img <- rsat_get_raster(filomena, \"mod09ga\", \"ndsi\") ndsi.img <- clamp(ndsi.img, -1, 1) clds.msk <- rsat_get_raster(filomena, \"mod09ga\", \"CloudMask\") clds.msk <- resample(clds.msk, ndsi.img, method = \"ngb\") ndsi.filt <- ndsi.img * clds.msk names(ndsi.filt) <- names(clds.msk) # keep the names snow.spain <- calc(ndsi.filt, max, na.rm = TRUE) library(tmap) tm_shape(snow.spain) + tm_raster(style = \"cont\")"},{"path":"https://docs.ropensci.org/rsat/articles/rsat4_process.html","id":"processing","dir":"Articles","previous_headings":"","what":"Processing","title":"4. Process","text":"Processing encapsulates operations applied satellite images solve particular issues derived errors, anomalies discrepancies sensors. instance, cloud removal sensor failures can lead data gaps time-series satellite images. Additionally, noise aerosols, dust, sensor measurement errors can reduce quality remotely sensed data. Interpolation Mean Anomalies (IMA) gap-filling smoothing approach mitigates issues (Militino et al. 2019).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat4_process.html","id":"theoretical-background","dir":"Articles","previous_headings":"Processing > Filling missing data","what":"Theoretical background","title":"4. Process","text":"rsat implements generic version algorithm function smoothing_image(). Neighborhood definition Interpolation Mean Anomalies, assuming nDays = 1 nYears = 1 theoretical explanation, let’s assume \\(15\\) images available dataset (squares image ). imagery corresponds \\(5\\) consecutive days \\(3\\) years. Consider willing fill/smooth target image (red square). IMA fills gaps borrowing information adaptable temporal neighborhood (yellow squares). Two parameters determine size neighborhood; number days target image (nDays) number previous subsequent years (nYears). parameters adjusted based temporal resolution time-series images. recommend neighborhood extends days rather years, little resemblance seasons. Also, cloudy series may require larger neighborhoods. Summarized algorithm Interpolation Mean Anomalies IMA gives following steps; (1) creates representative image neighborhood ignoring missing values e.g., mean, median, etc. pixel’s time-series (fun), (2) target representative images subtracted giving image anomalies, (3) anomalies falling outside quantile limits (aFilter) considered outliers therefore removed, (4) aggregates anomaly image coarser resolution (fact) reveal potential spatial dependencies, (5) procedure fits spatial model (thin plate splines TPS) anomalies used interpolate values original resolution, (6) output sum interpolated anomalies average image. process encapsulated smoothing_image() section shows usage.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/articles/rsat4_process.html","id":"data","dir":"Articles","previous_headings":"","what":"4. Process","title":"4. Process","text":"showcase uses time-series \\(6\\) NDVI images. NDVI stands Normalized Difference Vegetation Index indicator vegetation’s vigor. Values close \\(1\\) indicate presence green dense vegetation. Images correspond region norther Spain August \\(2^{nd}\\) \\(4^{th}\\), \\(2017\\) \\(2018\\). images part package can loaded environment follows: Let’s display series images spot gaps data: maps show hole August \\(3^{rd}\\), \\(2017\\) upper part image. aim IMA predict values missing parts provide complete continuous dataset.","code":"library(rsat) library(terra)  data(\"ex.ndvi.navarre\") ex.ndvi.navarre <- rast(ex.ndvi.navarre) library(tmap) tm_shape(ex.ndvi.navarre) + tm_raster(title = \"NDVI\", style = \"cont\")"},{"path":"https://docs.ropensci.org/rsat/articles/rsat4_process.html","id":"interpolation-of-mean-anomalies","dir":"Articles","previous_headings":"","what":"4. Process","title":"4. Process","text":"instruction applies IMA entire series. uses temporal neighborhood \\(2\\) days \\(1\\) year representative image mean. Outliers anomalies outside \\(1-99\\) quantile range. Anomalies aggregated factor \\(10\\) (every \\(10\\) pixels aggregated \\(1\\)) fit approximate spatial model. recommend tune parameters accordingly obtain best performance possible situation: algorithm predicts value missing existing pixels. last argument, .na = TRUE, indicates results preserve original values wherever available. IMA able run neighborhoods incomplete. situations, algorithm simply uses imagery available within temporal neighborhood. function prints message specifying actual number images used case. Let’s make comparison application IMA. intention keep growing number algorithms devoted processing future versions package.","code":"library(rsat) ndvi.fill <- rsat_smoothing_images(method = \"IMA\",                                    ex.ndvi.navarre,                                    nDays = 2,                                    nYears = 1,                                    fun = mean,                                    aFilter = c(0.01,0.99),                                    fact = 10,                                    only.na = TRUE) before <- ex.ndvi.navarre[[1:3]] after <- ndvi.fill[[1:3]] tm_shape(c(before,after)) + tm_raster(title = \"NDVI\", style = \"cont\")"},{"path":"https://docs.ropensci.org/rsat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Unai Pérez - Goya. Author, maintainer. Manuel Montesino - SanMartin. Author. Ana F Militino. Author. Maria Dolores Ugarte. Author. Marc Weber. Reviewer.            Marc reviewed rsat (v. 0.1.14) rOpenSci,             see <https://github.com/ropensci/software-review/issues/437> Kelly Hondula. Reviewer.            Kelly reviewed rsat (v. 0.1.14) rOpenSci,      see <https://github.com/ropensci/software-review/issues/437>","code":""},{"path":"https://docs.ropensci.org/rsat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"U Pérez-Goya, M Montesino-SanMartin, F Militino, M D Ugarte (2022). rsat: Dealing Multiplatform Satellite Images Landsat, MODIS, Sentinel. R package version 0.1.18. https://CRAN.R-project.org/package=rsat. Militino, .F., Ugarte, M.D., Pérez-Goya, U., M G Genton (2019). Interpolation Mean Anomalies Cloud-Filling Land Surface Temperature Normalized Difference Vegetation Index. IEEE Transactions Geoscience Remote Sensing 2019. 57(8), pp 6068-6078. (Open-access) doi:http://dx.doi.org/10.1109/TGRS.2019.2904193 Militino, .F., Ugarte, M.D., Pérez-Goya, U. (2018). Improving Quality Satellite Imagery Based Ground-Truth Data Rain Gauge Stations. Remote Sensing 2018; 10(398). (Open-access) doi:http://dx.doi.org/10.3390/rs10030398","code":"@Manual{,   title = {rsat: Dealing with Multiplatform Satellite Images from Landsat, MODIS, and Sentinel},   author = {{U P{\\'e}rez-Goya} and {M Montesino-SanMartin} and {A F Militino} and {M D Ugarte}},   year = {2022},   note = {R package version 0.1.19},   url = {https://CRAN.R-project.org/package=rsat}, } @Article{,   title = {Interpolation of the Mean Anomalies for Cloud-Filling in Land Surface Temperature and Normalized Difference Vegetation Index},   author = {{A F Militino} and {M D Ugarte} and {U P{\\'e}rez-Goya} and {M G Genton}},   journal = {IEEE Transactions on Geoscience and Remote Sensing},   year = {2019},   volume = {57},   number = {8},   pages = {6068--6078},   url = {http://dx.doi.org/10.1109/TGRS.2019.2904193}, } @Article{,   title = {Improving the Quality of Satellite Imagery Based on Ground-Truth Data from Rain Gauge Stations},   author = {{A F Militino} and {M D Ugarte} and {U P{\\'e}rez-Goya}},   journal = {Remote Sensing},   year = {2018},   volume = {10},   number = {398},   pages = {1--16},   url = {http://dx.doi.org/10.3390/rs10030398}, }"},{"path":"https://docs.ropensci.org/rsat/index.html","id":"rsat","dir":"","previous_headings":"","what":"Dealing with Multiplatform Satellite Images","title":"Dealing with Multiplatform Satellite Images","text":"goal rsat help handling time-series satellite images multiple platforms local, efficient, standardized way. package provides tools ; Search (run vignette(\"rsat1_search\", package = \"rsat\") command) Download (run vignette(\"rsat2_download\", package = \"rsat\") command) Customize, (run vignette(\"rsat3_customize\", package = \"rsat\") command) Process (run vignette(\"rsat4_process\", package = \"rsat\") command) satellite images Landsat, MODIS, Sentinel region time interest.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dealing with Multiplatform Satellite Images","text":"can install development version GitHub :","code":"install.packages(c('usethis', 'pkgdown', 'rcmdcheck', 'rversions', 'urlchecker'))  # check and install devtools if(!require(\"devtools\")){    install.packages(\"devtools\") } # check and install rmarkdown if(!require(\"rmarkdown\")){   install.packages(\"rmarkdown\") }  devtools::install_github(\"spatialstatisticsupna/rsat\", build_vignettes=TRUE)"},{"path":"https://docs.ropensci.org/rsat/index.html","id":"linux","dir":"","previous_headings":"Installation","what":"Linux","title":"Dealing with Multiplatform Satellite Images","text":"Linux, need install additional libraries starting rsat. Use following commands : Debian/Ubuntu RedHat/Fedora","code":"sudo apt update  sudo apt install r-cran-rcpp gdal-bin libgdal-dev libproj-dev openssl libssl-dev xml2 libxml2-dev libmagick++-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libharfbuzz-dev libfribidi-dev sudo dnf install gdal gdal-devel proj-devel xml2 libxml2-devel libcurl-devel openssl-devel ImageMagick-c++-devel R-devel udunits2-devel sqlite-devel geos-devel pandoc harfbuzz-devel fribidi-devel freetype-devel libpng-devel libtiff-devel libjpeg-devel"},{"path":"https://docs.ropensci.org/rsat/index.html","id":"log-in-profiles","dir":"","previous_headings":"","what":"Log-in profiles","title":"Dealing with Multiplatform Satellite Images","text":"registration following online portals required get full access satellite images rsat; - USGS USGS sole science agency Department Interior United States. Provide access Modis Images. information USGS can found . - EarthData: repository NASA’s earth observation data-sets. information EarthData can found . - DataSpace, web service giving access Copernicus’ scientific data hub. Please go find details data hub. convenience, try use username password . satisfy criteria web services make sure username 4 characters long includes period, number underscore. password must 12 character long include characters least one capital letter, numbers.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Dealing with Multiplatform Satellite Images","text":"basic example shows compute Normalized Difference Vegetation Index MODIS image captured January 11th, 2020 northern Spain (Navarre): See vignettes examples:","code":"library(rsat)  # replace with your own \"username\" and \"password\" set_credentials(\"username\", \"password\")  # region and time of interest: rtoi roi <- ex.navarre toi <- as.Date(\"2020-01-11\") rtp <- tempdir()  set_database(file.path(tempdir(), \"DATABASE\"))  navarre <- new_rtoi(\"Navarre\", roi, rtp)  # search, acquire, customize, and process rsat_search(region = navarre, product = \"mod09ga\", dates = toi) rsat_download(navarre) rsat_mosaic(navarre, overwrite = TRUE)  rsat_derive(navarre,              product = \"mod09ga\",              variable = \"NDVI\")  # plot the results plot(navarre, \"view\" ,        product = \"mod09ga\",        variable = \"NDVI\",        breaks = seq(0, 1, 0.1))        plot(navarre,\"dates\") browseVignettes(\"rsat\")"},{"path":"https://docs.ropensci.org/rsat/index.html","id":"related-similar-packages","dir":"","previous_headings":"","what":"Related similar packages","title":"Dealing with Multiplatform Satellite Images","text":"R become outstanding tool remote sensing image analysis. several tools search acquisition satellite images, however, rsat first package standardizes procedures data acquisition provide unique workflow multispectral satellite. Currently several packages dedicated remote sensing topic, usually ad-hoc packages satellite. list popular R packages dedicated satellite imagery:","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"multi-satellite-packages","dir":"","previous_headings":"Related similar packages","what":"Multi satellite packages","title":"Dealing with Multiplatform Satellite Images","text":"RGISTools getSpatialData luna closest package rsat RGISTools. rsat redefinition RGISTools package reprogrammed scrach object-oriented programming paradigm. Many RGISTools code lines used develop rsat, optimized redundancies code removed order facilitate maintenance. addition, rsat contains new features R classes make user-friendly. getSpatialData another package similar rsat. package philosophy single package searching downloading satellite images. However, development rsat goes bit addition search download, package helps organize downloaded information structured database. rsat allows use metadata images see direct relation region interest downloading . Also image processing standardization developed getSpatialData. last package dedicated image downloading luna.Searching downloading images compared rsat bit complicated. able search download Modis Landsat images, help organizing image products.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"single-satellite-packages","dir":"","previous_headings":"Related similar packages","what":"Single satellite packages","title":"Dealing with Multiplatform Satellite Images","text":"rLandsat getLandsat sen2r rLandsat makes easy search Landsat8 product IDs, place order USGS-ESPA download data. rsat hand able image search without knowing ids, just using polygon region interest, making search process much easier. getlandsat provides access Landsat 8 metadata images hosted AWS S3 . package data users, help use, rsat . sen2r R library helps download preprocess Sentinel-2 optical images. done GUI, something can interesting users limits analysis information prior downloading, can done rsat.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"raster-processing-packages","dir":"","previous_headings":"Related similar packages","what":"Raster processing packages","title":"Dealing with Multiplatform Satellite Images","text":"landsat satellite OpenImageR RSToolbox sits rsat helps search, download pre-process images, procedures done allows extract processed information used raster classes R (raster, stars spatRaster). image processing packages can used analysis R classes.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Dealing with Multiplatform Satellite Images","text":"accept contributions improve package. contributing, please follow steps: Contributions thoroughly tested testthat. Code style attempt follow tidyverse style guide. Please attempt describe want prior contributing submitting issue. Please follow typical github fork - pull-request workflow. Make sure use roxygen run Check contributing. front package matures.","code":""},{"path":"https://docs.ropensci.org/rsat/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Dealing with Multiplatform Satellite Images","text":"cite package: U. Pérez-Goya, M. Montesino-SanMartin, F Militino, M D Ugarte (2021). rsat: Dealing Multiplatform Satellite Images Landsat, MODIS, Sentinel. R package version 0.1.16. https://github.com/ropensci/rsat.","code":"citation(\"rsat\")[1]"},{"path":"https://docs.ropensci.org/rsat/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Dealing with Multiplatform Satellite Images","text":"work financed projects MTM2017-82553-R (AEI/FEDER, UE) PID2020-113125RB-I00/MCIN/AEI/10.13039/501100011033.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a Data Frame — as.data.frame,extent_crs-method","title":"Coerce to a Data Frame — as.data.frame,extent_crs-method","text":"Functions check object data frame, coerce possible.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a Data Frame — as.data.frame,extent_crs-method","text":"","code":"# S4 method for extent_crs as.data.frame(x)  # S4 method for records as.data.frame(x)"},{"path":"https://docs.ropensci.org/rsat/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a Data Frame — as.data.frame,extent_crs-method","text":"x R object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to a Data Frame — as.data.frame,extent_crs-method","text":"returns data frame, normally row names","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a Data Frame — as.data.frame,extent_crs-method","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre) # coerce the records to rtoi df <- as.data.frame(rcds) # print the dataframe print(df) }"},{"path":"https://docs.ropensci.org/rsat/reference/as.records.html","id":null,"dir":"Reference","previous_headings":"","what":"Create records object from data frame — as.records","title":"Create records object from data frame — as.records","text":"Create records object data frame","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create records object from data frame — as.records","text":"","code":"as.records(x)  # S4 method for data.frame as.records(x)"},{"path":"https://docs.ropensci.org/rsat/reference/as.records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create records object from data frame — as.records","text":"x data.frame columns representing slots records.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create records object from data frame — as.records","text":"returns records objects columns values x","code":""},{"path":"https://docs.ropensci.org/rsat/reference/as.records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create records object from data frame — as.records","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre) # coerce the records to dataframr df <- as.data.frame(rcds) # print the dataframe print(df)  # coerce the dataframe to records rcds2 <- as.records(df) # check the conversion identical(rcds,rcds2) }"},{"path":"https://docs.ropensci.org/rsat/reference/c.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine values into a vector or a list — c,extent_crs-method","title":"Combine values into a vector or a list — c,extent_crs-method","text":"generic function combines arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine values into a vector or a list — c,extent_crs-method","text":"","code":"# S4 method for extent_crs c(x, ...)  # S4 method for records c(x, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine values into a vector or a list — c,extent_crs-method","text":"x records object. ... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine values into a vector or a list — c,extent_crs-method","text":"combination 'x' class elements","code":""},{"path":"https://docs.ropensci.org/rsat/reference/c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine values into a vector or a list — c,extent_crs-method","text":"default method combines arguments form vector. arguments coerced common type type  returned value. attributes except names removed.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/set the dates from a records or an rtoi — dates","title":"Get/set the dates from a records or an rtoi — dates","text":"Get/set dates records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/set the dates from a records or an rtoi — dates","text":"","code":"dates(x)  # S4 method for records dates(x)  dates(x) <- value  # S4 method for records dates(x) <- value  # S4 method for rtoi dates(x)"},{"path":"https://docs.ropensci.org/rsat/reference/dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/set the dates from a records or an rtoi — dates","text":"x records rtoi object. value new date asign","code":""},{"path":"https://docs.ropensci.org/rsat/reference/dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/set the dates from a records or an rtoi — dates","text":"returns vector Date class","code":""},{"path":"https://docs.ropensci.org/rsat/reference/dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get/set the dates from a records or an rtoi — dates","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get a vector of dates includes in rtoi dates(navarre)  # get the records rcds <- records(navarre)  # coerce the records to dataframr dates(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/ex.dem.navarre.html","id":null,"dir":"Reference","previous_headings":"","what":"A Digital Elevation Model (DEM) of the region of Navarre (Spain) — ex.dem.navarre","title":"A Digital Elevation Model (DEM) of the region of Navarre (Spain) — ex.dem.navarre","text":"Geographically projected RasterStack digital elevation model (DEM) region Navarre (Spain). DEM obtained National Center Geographic Information Spain. DEM used covariate Image Mean Anomaly (IMA) algorithm (rsat_smoothing_images).","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.dem.navarre.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Digital Elevation Model (DEM) of the region of Navarre (Spain) — ex.dem.navarre","text":"RasterStack contains 6 layers DEM, one every image ex.ndvi.navarre. RasterStack coordinates Sinusoidal projection. name layer names contain capturing date   corresponding image format \"YYYYJJJ\" size 113 rows 105 columns 6 layers","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.madrid.html","id":null,"dir":"Reference","previous_headings":"","what":"A polygon with the border of Madrid (Spain) — ex.madrid","title":"A polygon with the border of Madrid (Spain) — ex.madrid","text":"Spatial feature (sf) representing border Madrid coordinates longitude/latitude format.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"A polygon with the border of Manhattan (USA) — ex.manhattan","title":"A polygon with the border of Manhattan (USA) — ex.manhattan","text":"Spatial feature (sf) representing border Manhattan coordinates NAD83 format.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.navarre.html","id":null,"dir":"Reference","previous_headings":"","what":"A polygon with the border of Navarre (Spain) — ex.navarre","title":"A polygon with the border of Navarre (Spain) — ex.navarre","text":"Spatial feature (sf) representing border Navarre coordinates longitude/latitude format.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.ndvi.navarre.html","id":null,"dir":"Reference","previous_headings":"","what":"A time series of NDVI in Navarre (Spain) — ex.ndvi.navarre","title":"A time series of NDVI in Navarre (Spain) — ex.ndvi.navarre","text":"Geographically projected RasterBrick object normalized difference vegetation index (NDVI) Navarre.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/ex.ndvi.navarre.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A time series of NDVI in Navarre (Spain) — ex.ndvi.navarre","text":"RasterBrick contains 6 images, 2nd 4th August 2017 2018. RasterBrick coordinates Sinusoidal projection: name layer names contain date   image format \"YYYYJJJ\" size layer contains 113 rows 105 columns","code":""},{"path":"https://docs.ropensci.org/rsat/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","title":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","text":"Loads R time series images regarding rtoi, satellite product, remote sensing index.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","text":"","code":"rsat_get_raster(x, p, v, s, ...)  # S4 method for rtoi rsat_get_raster(x, p, v, s, ...)  rsat_get_SpatRaster(x, p, v, s, ...)  # S4 method for rtoi rsat_get_SpatRaster(x, p, v, s, ...)  rsat_get_stars(x, p, v, s, ...)  # S4 method for rtoi rsat_get_stars(x, p, v, s, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","text":"x rtoi. p character name satellite data product. v character name index. s character name stage wanted. ... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","text":"raster stack.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/extract_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads into R a time series of images regarding an rtoi, satellite product,\nand remote sensing index. — rsat_get_raster","text":"","code":"if (FALSE) { library(rsat) # load example rtoi file.copy(from=system.file(\"ex/PamplonaDerived\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona.derived <- read_rtoi(file.path(tempdir(),\"PamplonaDerived\"))  # print available variables rsat_list_data(pamplona.derived)  # get RasterStack from raster package suppressWarnings(mod.ndvi.raster <-            rsat_get_raster(pamplona.derived, \"mod09ga\", \"NDVI\")) plot(mod.ndvi.raster)  # get spatraster from terra package mod.ndvi.rast <- rsat_get_SpatRaster(pamplona.derived, \"mod09ga\", \"NDVI\") plot(mod.ndvi.rast)  # get stars from stars package suppressWarnings(mod.ndvi.stars <- rsat_get_stars(pamplona.derived, \"mod09ga\", \"NDVI\")) plot(mod.ndvi.stars)   ## get any band in rtoi # list available data rsat_list_data(pamplona.derived) # select band 1: MODIS_Grid_500m_2D_sur_refl_b01_1 mod.ndvi.rast <- rsat_get_SpatRaster(pamplona.derived,                                      \"mod09ga\",                                      \"MODIS_Grid_500m_2D_sur_refl_b01_1\") plot(mod.ndvi.rast) }"},{"path":"https://docs.ropensci.org/rsat/reference/get-set_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts or assign the path of the database — get_database","title":"Extracts or assign the path of the database — get_database","text":"Extracts path database rtoi/package environment. , environment rtoi database defined rtoi database used.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get-set_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts or assign the path of the database — get_database","text":"","code":"get_database(x)  # S4 method for rtoi get_database(x)  # S4 method for missing get_database()  set_database(x, ...)  # S4 method for rtoi set_database(x, value)  # S4 method for character set_database(x)"},{"path":"https://docs.ropensci.org/rsat/reference/get-set_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts or assign the path of the database — get_database","text":"x rtoi object. ... additional arguments. value character argument. value change database directory x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get-set_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts or assign the path of the database — get_database","text":"database path rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get-set_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts or assign the path of the database — get_database","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the databse used by navarre get_database(navarre)  # set the a new database path set_database(navarre,\"new_path\")  # get the database used by rsat by default get_database()  # set the a new database path for the entire environment set_database(\"new_path\") }"},{"path":"https://docs.ropensci.org/rsat/reference/get_api_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the API name of a records — get_api_name","title":"Get the API name of a records — get_api_name","text":"function get set api names object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_api_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the API name of a records — get_api_name","text":"","code":"get_api_name(x)  # S4 method for records get_api_name(x)"},{"path":"https://docs.ropensci.org/rsat/reference/get_api_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the API name of a records — get_api_name","text":"x records object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_api_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the API name of a records — get_api_name","text":"character vector containing API names elements x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_api_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the API name of a records — get_api_name","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre)  # get a vector with the api name of each records get_api_name(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/get_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the file path of a records or an rtoi — get_dir","title":"Get the file path of a records or an rtoi — get_dir","text":"Get file path records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the file path of a records or an rtoi — get_dir","text":"","code":"get_dir(x)  # S4 method for records get_dir(x)  # S4 method for records get_order(x)  # S4 method for rtoi get_dir(x)"},{"path":"https://docs.ropensci.org/rsat/reference/get_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the file path of a records or an rtoi — get_dir","text":"x .","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the file path of a records or an rtoi — get_dir","text":"file path records","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the file path of a records or an rtoi — get_dir","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the path of the get_dir(navarre)  # get the records rcds <- records(navarre)  # gets the relative path to store records data get_dir(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/get_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the url to download a data record — get_download","title":"Extract the url to download a data record — get_download","text":"returns character url download image.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the url to download a data record — get_download","text":"","code":"get_download(x)"},{"path":"https://docs.ropensci.org/rsat/reference/get_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the url to download a data record — get_download","text":"x records object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the url to download a data record — get_download","text":"download url records","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the url to download a data record — get_download","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre) # coerce the records to rtoi get_download(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/get_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the slot called order from a records or an rtoi — get_order","title":"Get the slot called order from a records or an rtoi — get_order","text":"Get slot called order records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the slot called order from a records or an rtoi — get_order","text":"","code":"get_order(x)  get_order(x) <- value  # S4 method for records get_order(x) <- value"},{"path":"https://docs.ropensci.org/rsat/reference/get_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the slot called order from a records or an rtoi — get_order","text":"x records rtoi object. value logical argument. new value x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the slot called order from a records or an rtoi — get_order","text":"value called order","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the slot called order from a records or an rtoi — get_order","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre)  # gets a boolean get_order(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/get_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the url of the preview — get_preview","title":"Extract the url of the preview — get_preview","text":"returns character vector urls preview data records.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the url of the preview — get_preview","text":"","code":"get_preview(x)  # S4 method for records get_preview(x)  # S4 method for records get_download(x)"},{"path":"https://docs.ropensci.org/rsat/reference/get_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the url of the preview — get_preview","text":"x records object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the url of the preview — get_preview","text":"preview url records","code":""},{"path":"https://docs.ropensci.org/rsat/reference/get_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the url of the preview — get_preview","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre)  # get a vector with the preview url of each record get_api_name(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/length.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of an object — length,extent_crs-method","title":"Length of an object — length,extent_crs-method","text":"Get set length vectors (including lists) factors, R object method defined.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of an object — length,extent_crs-method","text":"","code":"# S4 method for extent_crs length(x)  # S4 method for records length(x)"},{"path":"https://docs.ropensci.org/rsat/reference/length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of an object — length,extent_crs-method","text":"x records object compute length.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of an object — length,extent_crs-method","text":"Length currently returns non-negative integer length 1","code":""},{"path":"https://docs.ropensci.org/rsat/reference/length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of an object — length,extent_crs-method","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre)  length(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the object — names,records-method","title":"Get the name of the object — names,records-method","text":"function get set names object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the object — names,records-method","text":"","code":"# S4 method for records names(x)  # S4 method for rtoi names(x)  # S4 method for rtoi,character names(x) <- value"},{"path":"https://docs.ropensci.org/rsat/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the object — names,records-method","text":"x records rtoi object. value character argument. new value x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the object — names,records-method","text":"character vector containing name names x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of the object — names,records-method","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  names(navarre) names(navarre) <- \"New name\" names(navarre)  rcrds <- records(navarre)  names(rcrds) }"},{"path":"https://docs.ropensci.org/rsat/reference/new_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new records object — new_record","title":"Create a new records object — new_record","text":"Create new records object scratch","code":""},{"path":"https://docs.ropensci.org/rsat/reference/new_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new records object — new_record","text":"","code":"new_record(   sat,   name,   date,   product,   download,   file_path,   path,   row,   tileid,   preview,   api_name,   order,   extent_crs )  # S4 method for character,character,Date,character,character,character,numeric,numeric,character,character,character,logical,extent_crs new_record(   sat,   name,   date,   product,   download,   file_path,   path,   row,   tileid,   preview,   api_name,   order,   extent_crs )  # S4 method for character,character,Date,character,character,character,numeric,numeric,character,character,character,logical,missing new_record(   sat,   name,   date,   product,   download,   file_path,   path,   row,   tileid,   preview,   api_name,   order )"},{"path":"https://docs.ropensci.org/rsat/reference/new_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new records object — new_record","text":"sat name satellite record belongs. name name record. date date record. product product. download url download satellite record. file_path saving directory satellite record. path path tiling system. row row tiling system. tileid tile id. preview url preview satellite record. api_name api name. order boolean, defines image must requested . extent_crs extent (used project preview).","code":""},{"path":"https://docs.ropensci.org/rsat/reference/new_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new records object — new_record","text":"records object","code":""},{"path":"https://docs.ropensci.org/rsat/reference/new_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new records object — new_record","text":"","code":"if (FALSE) { # create a new record from scrach rcds <- new_record(   sat = \"modis\",   name = \"mod09a\",   date = as.Date(\"2011087\", \"%Y%j\"),   product = \"product\",   download = \"url/aaa/download\",   file_path = \"file_path\",   path = 1,   row = 1,   tileid = \"exampleid\",   preview = \"url\",   api_name = \"nasa_inventory\",   order = FALSE ) rcds }"},{"path":"https://docs.ropensci.org/rsat/reference/new_rtoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new rtoi object — new_rtoi","title":"Creates a new rtoi object — new_rtoi","text":"Creates new rtoi object","code":""},{"path":"https://docs.ropensci.org/rsat/reference/new_rtoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new rtoi object — new_rtoi","text":"","code":"new_rtoi(name, region, rtoi_path, db_path, records, size)  # S4 method for character,sf,character,missing,missing,missing new_rtoi(name, region, rtoi_path)  # S4 method for character,sf,character,character,missing,missing new_rtoi(name, region, rtoi_path, db_path)  # S4 method for character,sf,character,character,records,missing new_rtoi(name, region, rtoi_path, db_path, records)  # S4 method for character,sf,character,character,records,numeric new_rtoi(name, region, rtoi_path, db_path, records, size)"},{"path":"https://docs.ropensci.org/rsat/reference/new_rtoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new rtoi object — new_rtoi","text":"name name region interest. region sf object. rtoi_path path rtoi folder. db_path path database. records records object. size size rtoi folder. default, size computed rtoi_path.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/new_rtoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a new rtoi object — new_rtoi","text":"reference rtoi object","code":""},{"path":"https://docs.ropensci.org/rsat/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an rtoi object — plot,rtoi,Date-method","title":"Plot an rtoi object — plot,rtoi,Date-method","text":"Plot (map ) values rtoi records object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an rtoi object — plot,rtoi,Date-method","text":"","code":"# S4 method for rtoi,Date plot(   x,   y,   ...,   variable = \"rgb\",   band_name = c(\"red\", \"green\", \"blue\"),   verbose = FALSE,   xsize = 250,   ysize = 250 )  # S4 method for rtoi,character plot(   x,   y,   ...,   variable = \"rgb\",   product = \"ALL\",   band_name = c(\"red\", \"green\", \"blue\"),   dates = NULL,   verbose = FALSE,   xsize = 250,   ysize = 250 )  # S4 method for records,ANY plot(x, y, verbose = FALSE, ...)  # S4 method for rtoi,missing plot(x, y, verbose = FALSE, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an rtoi object — plot,rtoi,Date-method","text":"x rtoi records. y character argument. valid values \"dates\", \"preview\", \"view\". ... additional arguments. variable character argument. variable plotted. default, color (RGB) variable selected . band_name character vector argument. Enables false color plots. default, usual bands selected c(\"red\",\"green\",\"blue\"). verbose logical argument. TRUE, function prints running steps warnings. xsize number samples horizontal axis. ysize number samples vertical axis. product character argument. product name plotted. dates date vector argument. dates plotted.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an rtoi object — plot,rtoi,Date-method","text":"tmap plot.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an rtoi object — plot,rtoi,Date-method","text":"","code":"library(rsat)  if (FALSE) {  # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  print(navarre)  # plot the calendar plot(navarre, \"dates\")    # replace with your own \"username\" and \"password\" set_credentials(\"username\", \"password\")  # plot the quicklook images before the download # needs credentials to download preview images plot(navarre, y = \"preview\")  # select partially cloud free rcds <- records(navarre) rcds <- rcds[dates(rcds) %in% as.Date(c(\"20210310\", \"20210313\"), \"%Y%m%d\")] records(navarre) <- rcds  plot(navarre, \"preview\")  file.copy(from=system.file(\"ex/Pamplona\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE) # plot already mosaicked rtoi (\"view\" mode) pamplona <- read_rtoi(file.path(tempdir(),\"Pamplona\"))  rsat_list_data(pamplona)  # plot can compute the rgb image on the fly from mosaicek bands plot(pamplona, \"view\", product=\"mod09ga\")  # plot on the fly with false color plot(pamplona, \"view\",      product = \"mod09ga\",      band_name = c(\"nir\", \"red\", \"green\"))  file.copy(from=system.file(\"ex/PamplonaDerived\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE) # plot already mosaicked rtoi (\"view\" mode) pamplona.derived <- read_rtoi(file.path(tempdir(),\"PamplonaDerived\"))  rsat_list_data(pamplona.derived)  # plot derived variables plot(pamplona.derived, \"view\",      product = \"mod09ga\",      variable = \"NDVI\")  # Set the max and min value in plot plot(pamplona.derived,\"view\",      variable=\"NDVI\",      product=\"mod09ga\",      zlim=c(0,1)) }"},{"path":"https://docs.ropensci.org/rsat/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the values — print,api_dataspace-method","title":"Prints the values — print,api_dataspace-method","text":"prints object returns invisibly (via invisible(x)).","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the values — print,api_dataspace-method","text":"","code":"# S4 method for api_dataspace print(x)  # S4 method for api_lpdaac print(x)  # S4 method for api_usgs print(x)  # S4 method for extent_crs print(x)  # S4 method for records print(x)  # S4 method for rtoi print(x)  # S4 method for variables print(x, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the values — print,api_dataspace-method","text":"x object printed.. ... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints the values — print,api_dataspace-method","text":"prints rtoi metadata","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints the values — print,api_dataspace-method","text":"","code":"if (FALSE) { library(rsat)  # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  print(navarre)  # get records rcrds <- records(navarre)  print(rcrds) }"},{"path":"https://docs.ropensci.org/rsat/reference/print_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the credentials for the web services — print_credentials","title":"Prints the credentials for the web services — print_credentials","text":"Prints credentials web services","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the credentials for the web services — print_credentials","text":"","code":"print_credentials(...)  # S4 method for ANY print_credentials()"},{"path":"https://docs.ropensci.org/rsat/reference/print_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the credentials for the web services — print_credentials","text":"... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints the credentials for the web services — print_credentials","text":"print credentials asigned package environment variable","code":""},{"path":"https://docs.ropensci.org/rsat/reference/print_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints the credentials for the web services — print_credentials","text":"","code":"print_credentials() #>      Api_name    Portal      Username Password #> [1,] \"lpdaac\"    \"earthdata\" \"\"       \"\"       #> [2,] \"usgs\"      \"earthdata\" \"\"       \"\"       #> [3,] \"dataspace\" \"dataspace\" \"\"       \"\"       set_credentials(\"example\", \"example\", \"earthdata\") print_credentials() #>      Api_name    Portal      Username  Password  #> [1,] \"lpdaac\"    \"earthdata\" \"example\" \"example\" #> [2,] \"usgs\"      \"earthdata\" \"example\" \"example\" #> [3,] \"dataspace\" \"dataspace\" \"\"        \"\""},{"path":"https://docs.ropensci.org/rsat/reference/product.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the product from a records or an rtoi — product","title":"Get the name of the product from a records or an rtoi — product","text":"Get name product records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the product from a records or an rtoi — product","text":"","code":"product(x)  # S4 method for records product(x)  # S4 method for rtoi product(x)"},{"path":"https://docs.ropensci.org/rsat/reference/product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the product from a records or an rtoi — product","text":"x records rtoi object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/product.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the product from a records or an rtoi — product","text":"name product records","code":""},{"path":"https://docs.ropensci.org/rsat/reference/read_rtoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads an rtoi from the hard drive — read_rtoi","title":"Reads an rtoi from the hard drive — read_rtoi","text":"Reads rtoi hard drive","code":""},{"path":"https://docs.ropensci.org/rsat/reference/read_rtoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads an rtoi from the hard drive — read_rtoi","text":"","code":"read_rtoi(path, ...)  # S4 method for character read_rtoi(path, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/read_rtoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads an rtoi from the hard drive — read_rtoi","text":"path rtoi object. ... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/read_rtoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads an rtoi from the hard drive — read_rtoi","text":"rtoi object readed disk.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/read_rtoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads an rtoi from the hard drive — read_rtoi","text":"","code":"if (FALSE) { library(rsat)  # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\")) print(navarre) }"},{"path":"https://docs.ropensci.org/rsat/reference/records-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A class object for satellite image metadata — records-class","title":"A class object for satellite image metadata — records-class","text":"class object organizes attributes satellite images' metadata several missions/programs uniformly. Structuring information facilitates managing, previewing, downloading data records.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A class object for satellite image metadata — records-class","text":"records works vector. accepts usual R methods c, [], length(), subset() unique(). record (vector element) contains several parameters slots. object can coerced data.frame using function .data.frame(). data.frame can transformed back records function .records().","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A class object for satellite image metadata — records-class","text":"sat name satellite. name name file. date capturing date image. product name data product. path path tiling system. row row tiling system. tileid tile identification number. download download url. file_path saving directory satellite record. preview preview url. api_name name API. order boolean, whether image needs ordered. extent_crs coordinate reference system preview.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A class object for satellite image metadata — records-class","text":"","code":"if (FALSE) { library(rsat) # create a copy of navarre file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  rcrds <- records(navarre)  modis.rcrds <- rcrds[sat_name(rcrds)%in%\"Modis\"] ls8.rcrds <- rcrds[sat_name(rcrds)%in%\"Landsat-8\"]  class(modis.rcrds) dates(ls8.rcrds) modis.ls8.records <- c(ls8.rcrds, modis.rcrds)  print(modis.ls8.records) }"},{"path":"https://docs.ropensci.org/rsat/reference/records.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the satellite records — records","title":"Extracts the satellite records — records","text":"returns object records rtoi.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the satellite records — records","text":"","code":"records(x)  # S4 method for rtoi records(x)  records(x) <- value  # S4 method for rtoi,records records(x) <- value"},{"path":"https://docs.ropensci.org/rsat/reference/records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the satellite records — records","text":"x rtoi object value records object set x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the satellite records — records","text":"set records x rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts the satellite records — records","text":"","code":"if (FALSE) { #' library(rsat) # create a copy of navarre file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE) # load example rtoi navarre <- read_rtoi(file.path(tempdir(),\"Navarre\")) print(navarre)  rcrds <- records(navarre)  records(navarre)<-rcrds[1] print(navarre)  records(navarre) <- rcrds print(navarre) unlink(file.path(tempdir(),\"Navarre\"),recursive=TRUE) }"},{"path":"https://docs.ropensci.org/rsat/reference/region.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts region from an rtoi — region","title":"Extracts region from an rtoi — region","text":"gets sf specifies region rtoi.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts region from an rtoi — region","text":"","code":"region(x)  # S4 method for rtoi region(x)  region(x) <- value  # S4 method for rtoi,sf region(x) <- value  # S4 method for rtoi,`NULL` region(x) <- value"},{"path":"https://docs.ropensci.org/rsat/reference/region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts region from an rtoi — region","text":"x rtoi object. value sf object define region x.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts region from an rtoi — region","text":"sf class region rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts region from an rtoi — region","text":"","code":"if (FALSE) { library(rsat) # create a copy of navarre file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the region from rtoi sf.obj <-  region(navarre) plot(sf.obj)  # asign new region value region(navarre)<-NULL  region(navarre)<-sf.obj }"},{"path":"https://docs.ropensci.org/rsat/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Renames an rtoi — rename","title":"Renames an rtoi — rename","text":"Renames parameters folder name rtoi.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renames an rtoi — rename","text":"","code":"rename(x, newname)  # S4 method for rtoi,character rename(x, newname)"},{"path":"https://docs.ropensci.org/rsat/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renames an rtoi — rename","text":"x rtoi object newname character class rename rtoi.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renames an rtoi — rename","text":"nothing.  changes internal name rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renames an rtoi — rename","text":"","code":"if (FALSE) { myrtoi <- read_rtoi(\"file_path/rtoir_name\") rename(myrtoi, \"Navarre_BACK\") }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat.html","id":null,"dir":"Reference","previous_headings":"","what":"`rsat' — rsat","title":"`rsat' — rsat","text":"goal `rsat` help handling time-series satellite images multiple platforms local, efficient, standardized way. package provides tools ; Search (run vignette(\"rsat1_search\", package = \"rsat\")) Download (run vignette(\"rsat2_download\", package = \"rsat\")) Customize, (run vignette(\"rsat3_customize\", package = \"rsat\")) Process (run vignette(\"rsat4_process\", package = \"rsat\")) satellite images Landsat, MODIS, Sentinel region time interest.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat.html","id":"registration","dir":"Reference","previous_headings":"","what":"Registration","title":"`rsat' — rsat","text":"registration following online portals required get full access satellite images `rsat`; USGS USGS sole science agency Department Interior United States. Provide access Modis Images. information EarthData can found . EarthData: repository NASA's earth observation data-sets. information EarthData can found . SciHub, web service giving access Copernicus' scientific data hub. Please go find details data hub. convenience, try use username password . satisfy criteria web services make sure username 4  characters long includes period, number underscore. password must  12 character long include characters least one capital  letter, numbers.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat.html","id":"contributing","dir":"Reference","previous_headings":"","what":"Contributing","title":"`rsat' — rsat","text":"want contribute adding new features fixing bugs package can github address: https://github.com/spatialstatisticsupna/rsat Bug report: https://github.com/spatialstatisticsupna/rsat/issues","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_cloudMask.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cloud mask from an rtoi — rsat_cloudMask","title":"Create cloud mask from an rtoi — rsat_cloudMask","text":"Create cloud mask rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_cloudMask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cloud mask from an rtoi — rsat_cloudMask","text":"","code":"rsat_cloudMask(x, ...)  # S4 method for rtoi rsat_cloudMask(x, products = \"ALL\", verbose = FALSE, overwrite = FALSE, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_cloudMask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cloud mask from an rtoi — rsat_cloudMask","text":"x rtoi object cloud masks computed. ... additional arguments products name dataset cloud masks computed. verbose logical argument. TRUE, function prints running steps warnings. overwrite logical argument. TRUE, overwrites existing images name.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_cloudMask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cloud mask from an rtoi — rsat_cloudMask","text":"nothing. cloud masks save hard drive. Use get_stars get variables.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_cloudMask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cloud mask from an rtoi — rsat_cloudMask","text":"","code":"if (FALSE) { ## Smooth data in rtoi library(rsat)  # create a copy of pamplona in temp file file.copy(from=system.file(\"ex/Pamplona\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona <- read_rtoi(file.path(tempdir(),\"Pamplona\"))  rsat_cloudMask(pamplona)  rsat_list_data(pamplona) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a remote sensing index from an rtoi — rsat_derive","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"Combines bands multispectral satellite products simple math highlight process material image.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"","code":"rsat_derive(x, variable, ...)  # S4 method for rtoi,character rsat_derive(   x,   variable,   product,   dates,   fun,   overwrite = FALSE,   verbose = FALSE,   suppressWarnings = TRUE,   ... )"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"x rtoi source images. variable name variable. ... additional argument variable deriving product name product index computed. dates vector dates considered (optional). fun function computes remote sensing index. overwrite logical argument. TRUE, overwrites existing images name. verbose logical argument. TRUE, function prints running steps warnings. suppressWarnings evaluates expression context ignores warnings.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"nothing. derived variables save hard drive. Use get_stars get variables.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"package contemplates pre-defined indexes, can displayed using show_variables() function. compute one , write name variable argument. Custom indexes can supplied fun argument. function use name bands inputs (red, green, blue, nir, swir1, swir2) return single element. instance, Normalized Difference Snow Index ; NDSI = function(green, swir1) ndsi <- (green - swir1)/(green + swir1) return(ndsi)","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_derive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes a remote sensing index from an rtoi — rsat_derive","text":"","code":"if (FALSE) { library(rsat)  # create a copy of pamplona in temp file file.copy(from=system.file(\"ex/Pamplona\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona <- read_rtoi(file.path(tempdir(),\"Pamplona\"))  rsat_list_data(pamplona) # show prefedined varibles show_variables() rsat_derive(pamplona, \"NDVI\", product = \"mod09ga\") # now NDVI is processed rsat_list_data(pamplona)  # ad-hoc variable NDSI = function(green, swir1){ ndsi <- (green - swir1)/(green + swir1) return(ndsi) } rsat_derive(pamplona, \"NDSI\", product = \"mod09ga\",fun=NDSI) # now NDVI is processed rsat_list_data(pamplona) plot(pamplona, product=\"mod09ga\",variable=\"NDSI\") }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the images from a records or an rtoi object — rsat_download","title":"Download the images from a records or an rtoi object — rsat_download","text":"function saves raw images database specified directory. skips images already exist database directory.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the images from a records or an rtoi object — rsat_download","text":"","code":"rsat_download(x, ...)  # S4 method for rtoi rsat_download(x, db_path, verbose = FALSE, ...)  # S4 method for records rsat_download(x, db_path, verbose = FALSE, parallel = FALSE, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the images from a records or an rtoi object — rsat_download","text":"x records rtoi object. ... additional arguments. db_path path database. default, path defined rtoi. verbose logical argument. TRUE, function prints running steps warnings. parallel logical argument. TRUE, function downloads multiples APIs parallel.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the images from a records or an rtoi object — rsat_download","text":"nothing. Downloads images database","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the images from a records or an rtoi object — rsat_download","text":"","code":"if (FALSE) { library(rsat)  # create a copy of navarre in temp file file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # assign the path of the database set_database(file.path(tempdir(),\"DATABASE\")) rsat_download(navarre)  rcrds <-  records(navarre)  rsat_download(rcrds) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_list_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List the information available for an rtoi — rsat_list_data","title":"List the information available for an rtoi — rsat_list_data","text":"Displays existing products, bands, processing levels given rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_list_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the information available for an rtoi — rsat_list_data","text":"","code":"rsat_list_data(x, ...)  # S4 method for rtoi rsat_list_data(x, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_list_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the information available for an rtoi — rsat_list_data","text":"x rtoi object. ... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_list_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the information available for an rtoi — rsat_list_data","text":"data.frame available information.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_list_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the information available for an rtoi — rsat_list_data","text":"","code":"if (FALSE) { file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  print(navarre)  # print empty rtoi rsat_list_data(navarre)  file.copy(from=system.file(\"ex/Pamplona\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona <- read_rtoi(file.path(tempdir(),\"Pamplona\"))  print(pamplona)  rtoi.data <- rsat_list_data(pamplona) # print mosaicked bands print(rtoi.data)  # print mosaicked bands + derived NDVI file.copy(from=system.file(\"ex/PamplonaDerived\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona.derived <- read_rtoi(file.path(tempdir(),\"PamplonaDerived\")) rsat_list_data(pamplona.derived) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","title":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","text":"Satellite measurements divided indivisible units called tiles. mosaic function binds crops tiles generate single image region interest date.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","text":"","code":"rsat_mosaic(x, ...)  # S4 method for rtoi rsat_mosaic(x, ...)  # S4 method for records rsat_mosaic(   x,   out_path,   db_path,   bfilter = c(),   warp = \"extent\",   region,   overwrite = FALSE,   verbose = FALSE,   ... )"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","text":"x rtoi object. ... additional arguments. out_path path save mosaicked images. default, path defined x. db_path path database. default, path defined x. bfilter vector bands . supplied, used. warp character. equal \"extent\", also crops images around rtoi. Use \"\" otherwise. region sf object. Region cropping images around. default, path defined x. overwrite logical argument. TRUE, overwrites existing images name. verbose boolean. TRUE show verbose output. Default FALSE","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_mosaic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","text":"nothing. Mosaics downloaded images stored hard disk","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mosaic the tiles intersecting the region of interest — rsat_mosaic","text":"","code":"if (FALSE) { library(rsat)  # load navarre sf from the package data(ex.navarre)  # set the credentials set_credentials(\"username\", \"password\")  # path where the region is stored rtoi.path <- tempdir() # path where downloads are stored db.path <- file.path(tempdir(), \"DATABASE\") navarre <- new_rtoi(   \"Navarre\",   ex.navarre,   rtoi.path,   db.path ) #' # Landsat-5 rsat_search(   region = navarre,   product = \"LANDSAT_TM_C1\",   dates = as.Date(\"1988-08-01\") + seq(1, 35) ) rsat_download(navarre)  rsat_mosaic(navarre, overwrite = T)  rsat_list_data(navarre) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Preview a records or an rtoi object — rsat_preview","title":"Preview a records or an rtoi object — rsat_preview","text":"Preview records rtoi object","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preview a records or an rtoi object — rsat_preview","text":"","code":"rsat_preview(x, n, ...)  # S4 method for rtoi,Date rsat_preview(x, n, lpos = c(3, 2, 1), add.layer = FALSE, verbose = FALSE, ...)  # S4 method for rtoi,missing rsat_preview(x, n, lpos = c(3, 2, 1), add.layer = FALSE, verbose = FALSE, ...)  # S4 method for records,Date rsat_preview(   x,   n,   lpos = c(3, 2, 1),   tmp_dir = file.path(tempdir()),   add.layer = FALSE,   verbose = FALSE,   get.map = TRUE,   ... )  # S4 method for records,numeric rsat_preview(   x,   n,   lpos = c(3, 2, 1),   tmp_dir = file.path(tempdir()),   add.layer = FALSE,   verbose = FALSE,   get.map = TRUE,   ... )"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preview a records or an rtoi object — rsat_preview","text":"x records rtoi object. n date expressed temporal index time series. ... additional arguments lpos vector argument. Defines position red-green-blue layers enable false color visualization. add.layer logical argument. TRUE, function plots image existing map. verbose logical argument. TRUE, function prints running steps warnings. tmp_dir character argument. directory preview images located. get.map logical argument. TRUE, function return leaflet map.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preview a records or an rtoi object — rsat_preview","text":"nothing. Previews region viewer.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preview a records or an rtoi object — rsat_preview","text":"","code":"if (FALSE) { library(rsat)  # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  set_credentials(\"username\", \"password\") set_database(file.path(tempdir(), \"DATABASE\"))  # by default the first date in rtoi is previewed rsat_preview(navarre)   preview.dates <- dates(navarre) # use add.layer to preview images of several days rsat_preview(navarre,preview.dates[2],add.layer = TRUE)  # you can also preview records rcrds <- records(navarre) rsat_preview(rcrds, n = 1) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_products.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the products accepted by the services — rsat_products","title":"Show the products accepted by the services — rsat_products","text":"Show products accepted services","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_products.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the products accepted by the services — rsat_products","text":"","code":"rsat_products(...)  # S4 method for ANY rsat_products()"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_products.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the products accepted by the services — rsat_products","text":"... additional arguments.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_products.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the products accepted by the services — rsat_products","text":"prints list products","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_products.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the products accepted by the services — rsat_products","text":"","code":"rsat_products() #> [1] \"-------------------------------------------------------------------------\" #> [1] \"    rsat supported products\" #> [1] \"-------------------------------------------------------------------------\" #> [1] \"MODIS_Aqua: MYD09A1, MYD09CMG, MYD09GA, MYD09GQ, MYD09Q1, MYD11A1, MYD11A2 , MYD11B1, MYD11B2, MYD11B3, MYD11C1, MYD11C2, MYD11C3, MYD11_L2, MYD13A1, MYD13A2 , MYD13A3, MYD13C1, MYD13C2, MYD13Q1, MYD14, MYD14A1, MYD14A2, MYD15A2H, MYD16A2, MYD16A2GF, MYD16A3GF, MYD17A2H, MYD17A2HGF, MYD17A3HGF, MYD21, MYD21A1D, MYD21A1N, MYD21A2, MYD21C1, MYD21C2, MYD21C3, MYD28C2, MYD28C3\" #> [1] \"MODIS_Terra: MOD09A1, MOD09CMG, MOD09GA, MOD09GQ, MOD09Q1, MOD11A1, MOD11A2 , MOD11B1, MOD11B2, MOD11B3, MOD11C1, MOD11C2, MOD11C3, MOD11_L2, MOD13A1, MOD13A2 , MOD13A3, MOD13C1, MOD13C2, MOD13Q1, MOD14, MOD14A1, MOD14A2, MOD15A2H, MOD16A2, MOD16A2GF, MOD16A3GF, MOD17A2H, MOD17A2HGF, MOD17A3HGF, MOD21, MOD21A1D, MOD21A1N, MOD21A2, MOD21C1, MOD21C2, MOD21C3, MOD28C2, MOD28C3\" #> [1] \"-------------------------------------------------------------------------\" #> [1] \"Landsat-8: landsat_ot_c2_l2, landsat_ot_c2_l1, lsr_landsat_8_c1, landsat_8_c1\" #> [1] \"Landsat-7: landsat_etm_c2_l2, landsat_etm_c2_l1, lsr_landsat_etm_c1, landsat_etm_c1\" #> [1] \"Landsat_1-5: landsat_tm_c2_l2, landsat_tm_c2_l1, landsat_mss_c2_l1, lsr_landsat_tm_c1, landsat_tm_c1, landsat_mss_c1\" #> [1] \"-------------------------------------------------------------------------\" #> [1] \"Sentinel-1: SLC, GRD, OCN\" #> [1] \"Sentinel-2: S2MSI2A, S2MSI1C, S2MS2Ap\" #> [1] \"Sentinel-3: SR_1_SRA___, SR_1_SRA_A, SR_1_SRA_BS, SR_2_LAN___, OL_1_EFR___, OL_1_ERR___, OL_2_LFR___, OL_2_LRR___, SL_1_RBT___, SL_2_LST___, SY_2_SYN___, SY_2_V10___, SY_2_VG1___, SY_2_VGP___\" #> [1] \"Sentinel-5: L1B_IR_SIR, L1B_IR_UVN, L1B_RA_BD1, L1B_RA_BD2, L1B_RA_BD3, L1B_RA_BD4, L1B_RA_BD5, L1B_RA_BD6, L1B_RA_BD7, L1B_RA_BD8, L2__AER_AI, L2__AER_LH, L2__CH4, L2__CLOUD_, L2__CO____, L2__HCHO__, L2__NO2___, L2__NP_BD3, L2__NP_BD6, L2__NP_BD7, L2__O3_TCL, L2__O3____, L2__SO2___\" #> [1] \"-------------------------------------------------------------------------\""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search satellite images — rsat_search","title":"Search satellite images — rsat_search","text":"Search satellite images concerning particular location, data product, date interval. function returns records object region sf. rtoi used, function returns nothing records added rtoi.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search satellite images — rsat_search","text":"","code":"rsat_search(region, product, ...)  # S4 method for rtoi,character rsat_search(region, product, verbose = FALSE, ...)  # S4 method for sf,character rsat_search(region, product, verbose = FALSE, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search satellite images — rsat_search","text":"region Spatial*, Raster*, sf rtoi class objects defining region interest. product character vector product names. ... additional arguments searching verbose logical argument. TRUE, function prints running steps warnings.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search satellite images — rsat_search","text":"nothing x rtoi, records class search region.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search satellite images — rsat_search","text":"MODIS images found NASA Common  Metadata Repository (CMR). inventory MODIS products can found . catalog shows product short names detailed information. MODIS surface reflectance products named `mod09ga' `myd09ga' Terra Aqua satellites. time rsat released, NASA carries maintenance website Wednesdays, may cause error connecting server. use ESA's powered API (`SciHub') find Sentinel images. catalog Sentinel-2 -3 products can found , respectively. Sentinel-2 -3 surface reflectance product names referred `S2MSI2A' `SY_2_SYN___'. Landsat images accessed via Machine--Machine API. Details Landsat products can found . names Landsat products `LANDSAT_TM_C1', `LANDSAT_ETM_C1', `LANDSAT_8_C1' missions 4-5, 7, 8.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search satellite images — rsat_search","text":"","code":"if (FALSE) { library(rsat) set_credentials(\"username\", \"password\")  # search navarre images using sf record.list <- rsat_search(   region = ex.navarre,   product = \"mod09ga\",   dates = as.Date(\"2011-01-01\") + seq(1, 10, 1) )  # creating a new rtoi rtoi.path <- tempdir() navarre <- new_rtoi(   \"Navarre\", # name of the region   ex.navarre, # sf of the region   rtoi.path ) # path for the rtoi  # see the number of records in navarre print(navarre)  # search modis images using rtoi rsat_search(   region = navarre,   product = \"mod09ga\",   dates = as.Date(\"2011-01-01\") + seq(1, 10, 1) )  # see the number of records in navarre print(navarre)  # search landsat images using rtoi rsat_search(   region = navarre,   product = \"LANDSAT_8_C1\",   dates = as.Date(\"2016-01-01\") + seq(1, 30, 1) )  # see the number of records in navarre print(navarre)  # search sentinel-2 (level 1 and level 2) images using rtoi rsat_search(   region = navarre,   product = c(\"S2MSI1C\", \"S2MSI2A\"),   dates = as.Date(\"2016-01-01\") + seq(1, 30, 1) )  # see the number of records in navarre print(navarre)  # search sentinel-3 level-2 images using rtoi rsat_search(   region = navarre,   product = \"OL_2_LFR___\",   dates = as.Date(\"2019-01-01\") + seq(1, 2, 1) )  # search sentinel-1 level-2 images using rtoi rsat_search(   region = navarre,   product = \"GRD\",   dates = as.Date(\"2019-01-01\") + seq(1, 2, 1) )  # search Landsat-5 images using rtoi rsat_search(   region = navarre,   product = \"LANDSAT_TM_C1\",   dates = as.Date(\"1988-08-01\") + seq(1, 35) )  print(navarre)  # get all records from rtoi navarre.records <- records(navarre)  print(navarre.records) }"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"apply_ima implementation spatio-temporal method called Interpolation Mean Anomalies(IMA) gap filling smoothing satellite data (Militino et al. 2019) . smoothing_images implementation spatio temporal method called image mean anomaly (IMA) gap filling smoothing satellite data (Militino et al. 2019) .","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"","code":"rsat_smoothing_images(x, method, ...)  # S4 method for rtoi,character rsat_smoothing_images(   x,   method,   product = \"ALL\",   satellite = \"ALL\",   stage = \"ALL\",   variable = \"ALL\",   test.mode = FALSE,   ... )  # S4 method for SpatRaster,character rsat_smoothing_images(x, method, ...)"},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"x rtoi RastespatRaster containing time series satellite images. method character argument. Defines method used processing images, e.. \"IMA\". ... arguments nested functions: Img2Fill  vector defining   images filled/smoothed. r.dates vector dates layers x. Mandatory layer names x contain  capturing dates \"YYYYJJJ\" format. nDays numeric argument number   previous subsequent days temporal neighborhood. nYears numeric argument number   previous subsequent years temporal neighborhood. aFilter vector lower upper   quantiles defining outliers anomalies. Ex. c(0.05,0.95). fact numeric argument specifying aggregation   factor anomalies. fun function used aggregate   image anomalies. mean (default) median   accepted. snow.mode logical argument. TRUE,   process parallelized using functionalities `   raster' package. predictSE calculate standard error instead   prediction. factSE fact used standard error   prediction. .name name folder containing   smoothed/filled images saved Hard Disk Device (HDD). .na logical argument. TRUE   fills NA values. FALSE  default. product character argument. name product processed. Check name parameter rsat_list_data function. Check name parameter rsat_list_data function. default, \"\". satellite character argument. name satellite processed. Check name parameter rsat_list_data function. default, \"\". stage character argument. name processed stage data. Check name parameter rsat_list_data function. default, \"\". variable character argument.name variable processed. Check name parameter rsat_list_data function. default, \"\". test.mode logical argument. TRUE, function runs lines test rsat_smoothing_images rtoi object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"RastespatRaster filled/smoothed images.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"filling/smoothing method developed Militino et al. (2019) . IMA fills gaps borrowing information adaptable temporal neighborhood. Two parameters determine size neighborhood; number days  target image (nDays) number previous subsequent years (nYears). parameters adjusted based temporal resolution time-series images. recommend neighborhood extends days rather years, little resemblance seasons. Also, cloudy series may require larger neighborhoods. IMA gives following steps; (1) creates representative image temporal neighborhood target image (image filled/smoothed) e.g., mean, median, etc. pixel's time-series (fun), (2) target representative images subtracted giving image anomalies, (3) anomalies falling outside quantile limits (aFilter) considered outliers therefore removed, (4) aggregates anomaly image coarser resolution (fact) reveal potential spatial dependencies, (5) procedure fits spatial model (thin plate splines TPS) anomalies used interpolate values original resolution, (6) output sum interpolated anomalies average image.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"Militino AF, Ugarte MD, Perez-Goya U, Genton MG (2019). “Interpolation Mean Anomalies Cloud-Filling Land Surface Temperature (LST) Normalized Difference Vegetation Index (NDVI).” IEEE Transactions Geoscience Remote Sensing. (Open-Access). http://dx.doi.org/10.1109/TGRS.2019.2904193.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rsat_smoothing_images.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill data gaps and smooth outliers in a time series of satellite images — rsat_smoothing_images","text":"","code":"if (FALSE) { ## Smooth data in rtoi library(rsat) require(terra)  # create a copy of pamplona in temp file file.copy(from=system.file(\"ex/PamplonaDerived\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  # load example rtoi pamplona <- read_rtoi(file.path(tempdir(),\"PamplonaDerived\")) rsat_smoothing_images(pamplona,                       method = \"IMA\",                       variable=\"NDVI\" ) rsat_list_data(pamplona) # get smoothed smoothed <- rsat_get_SpatRaster(pamplona,p=\"mod09ga\",v=\"NDVI\",s=\"IMA\") plot(smoothed)  # get original original <- rsat_get_SpatRaster(pamplona,p=\"mod09ga\",v=\"NDVI\",s=\"variables\") plot(original) plot(smoothed[[1]]-original[[1]])  ## smooth user defined SpatRaster dataset require(terra) data(ex.ndvi.navarre)  # load an example of NDVI time series in Navarre ex.ndvi.navarre <- rast(ex.ndvi.navarre) # the raster stack with the date in julian format as name plot(ex.ndvi.navarre)  # smoothin and fill all the time series tiles.mod.ndvi.filled <- rsat_smoothing_images(ex.ndvi.navarre,   method = \"IMA\" ) # show the filled images plot(tiles.mod.ndvi.filled)  # plot comparison of the cloud and the filled images tiles.mod.ndvi.comp <- c(   ex.ndvi.navarre[[1]], tiles.mod.ndvi.filled[[1]],   ex.ndvi.navarre[[2]], tiles.mod.ndvi.filled[[2]] ) plot(tiles.mod.ndvi.comp) }"},{"path":"https://docs.ropensci.org/rsat/reference/rtoi-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Region and Time Of Interest (rtoi) — rtoi-class","title":"Region and Time Of Interest (rtoi) — rtoi-class","text":"proxy object store metadata satellite imagery covering spatial region time period. Images can come multiple missions/programs purpose help managing heterogeneous datasets.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rtoi-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Region and Time Of Interest (rtoi) — rtoi-class","text":"rtoi object manages two main folders called database rtoi. database meant work local, generic, organized archive raw satellite data retrieved download() function. rtoi folder contains processed information particular region time interest. mosaic() called, function crops mosaics relevant raw images database saves results rtoi folder. folder also contains region.rtoi file saves metadata region/time interest satellite imagery available.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rtoi-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Region and Time Of Interest (rtoi) — rtoi-class","text":"name character name region interest. rtoi_path character path rtoi folder. region sf region interest. records satellite records available region time interest. db_path character path database.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/rtoi-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Region and Time Of Interest (rtoi) — rtoi-class","text":"","code":"if (FALSE) { data(ex.navarre) ## Create an rtoi with database # path where the region is stored rtoi.path <- tempdir()  # path where downloads are stored db.path <- file.path(tempdir(), \"DATABASE\") navarre <- new_rtoi(   name = \"Navarre_rtoi\",   region = ex.navarre,   rtoi_path = rtoi.path,   db_path = db.path )  print(navarre)  ## Create an rtoi without database navarre2 <- new_rtoi(   name = \"Navarre_rtoi2\",   region = ex.navarre,   rtoi_path = rtoi.path )  print(navarre2) }"},{"path":"https://docs.ropensci.org/rsat/reference/sat_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of the satellite(s) from a records or an rtoi — sat_name","title":"Get the name of the satellite(s) from a records or an rtoi — sat_name","text":"Get name satellite(s) records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/sat_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of the satellite(s) from a records or an rtoi — sat_name","text":"","code":"sat_name(x)  # S4 method for records sat_name(x)  # S4 method for rtoi sat_name(x)"},{"path":"https://docs.ropensci.org/rsat/reference/sat_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of the satellite(s) from a records or an rtoi — sat_name","text":"x records rtoi object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/sat_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of the satellite(s) from a records or an rtoi — sat_name","text":"name satellite","code":""},{"path":"https://docs.ropensci.org/rsat/reference/sat_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of the satellite(s) from a records or an rtoi — sat_name","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\")) # get the records rcds <- records(navarre) # coerce the records to dataframe sat_name(rcds) }"},{"path":"https://docs.ropensci.org/rsat/reference/set_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves the credentials for the web services — set_credentials","title":"Saves the credentials for the web services — set_credentials","text":"Saves credentials web services","code":""},{"path":"https://docs.ropensci.org/rsat/reference/set_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves the credentials for the web services — set_credentials","text":"","code":"set_credentials(user, pass, credential)  # S4 method for character,character,missing set_credentials(user, pass)  # S4 method for character,character,character set_credentials(user, pass, credential)"},{"path":"https://docs.ropensci.org/rsat/reference/set_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves the credentials for the web services — set_credentials","text":"user character argument. Defines username api platform search download images pass character argument. Defines password api platform search download images credential optional argument specify name platform. Valid names earthdata, scihub, scihubs5p, ","code":""},{"path":"https://docs.ropensci.org/rsat/reference/set_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves the credentials for the web services — set_credentials","text":"nothing. set credentials package environment variable","code":""},{"path":"https://docs.ropensci.org/rsat/reference/set_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves the credentials for the web services — set_credentials","text":"","code":"print_credentials() #>      Api_name    Portal      Username  Password  #> [1,] \"lpdaac\"    \"earthdata\" \"example\" \"example\" #> [2,] \"usgs\"      \"earthdata\" \"example\" \"example\" #> [3,] \"dataspace\" \"dataspace\" \"\"        \"\"        set_credentials(\"example\", \"example\") print_credentials() #>      Api_name    Portal      Username  Password  #> [1,] \"lpdaac\"    \"earthdata\" \"example\" \"example\" #> [2,] \"usgs\"      \"earthdata\" \"example\" \"example\" #> [3,] \"dataspace\" \"dataspace\" \"example\" \"example\" set_credentials(\"example\", \"example\", \"earthdata\") print_credentials() #>      Api_name    Portal      Username  Password  #> [1,] \"lpdaac\"    \"earthdata\" \"example\" \"example\" #> [2,] \"usgs\"      \"earthdata\" \"example\" \"example\" #> [3,] \"dataspace\" \"dataspace\" \"example\" \"example\""},{"path":"https://docs.ropensci.org/rsat/reference/show.html","id":null,"dir":"Reference","previous_headings":"","what":"Show an Object — show,extent_crs-method","title":"Show an Object — show,extent_crs-method","text":"Display object, printing, plotting whatever suits class. function exists specialized methods. default method calls showDefault.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show an Object — show,extent_crs-method","text":"","code":"# S4 method for extent_crs show(object)  # S4 method for records show(object)  # S4 method for rtoi show(object)  # S4 method for variables show(object)"},{"path":"https://docs.ropensci.org/rsat/reference/show.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show an Object — show,extent_crs-method","text":"object R object","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show an Object — show,extent_crs-method","text":"show returns invisible NULL.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show an Object — show,extent_crs-method","text":"","code":"if (FALSE) { ## load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  ## The method will now be used for automatic printing of navarre navarre  ## get records rcds <- records(navarre)  rcds }"},{"path":"https://docs.ropensci.org/rsat/reference/show_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"List the variables and satellites supported by rsat — show_variables","title":"List the variables and satellites supported by rsat — show_variables","text":"Displays satellites variable method","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the variables and satellites supported by rsat — show_variables","text":"","code":"show_variables(...)  # S4 method for ANY show_variables()"},{"path":"https://docs.ropensci.org/rsat/reference/show_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the variables and satellites supported by rsat — show_variables","text":"... arguments nesting functions","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the variables and satellites supported by rsat — show_variables","text":"prints supported satellites derived variables information.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/show_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the variables and satellites supported by rsat — show_variables","text":"","code":"show_variables() #> Data and variable methods provided by rsat #> Satellite products: ls1, ls2, ls3, ls4, ls5, ls7, ls8, mod09ga, myd09ga, mcd43a4, Sentinel-1, Sentinel-2, Sentinel-3, SY_2_SYN___. #> Variable Methods: EVI, MSAVI2, NBR, NBR2, NDMI, NDVI, NDWI, RGB, SAVI."},{"path":"https://docs.ropensci.org/rsat/reference/sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract or replace parts of an object — [,extent_crs,ANY,ANY,ANY-method","title":"Extract or replace parts of an object — [,extent_crs,ANY,ANY,ANY-method","text":"Operators acting vectors, matrices, arrays lists extract replace parts.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract or replace parts of an object — [,extent_crs,ANY,ANY,ANY-method","text":"","code":"# S4 method for extent_crs,ANY,ANY,ANY [(x, i)  # S4 method for extent_crs,ANY,ANY,ANY [(x, i) <- value  # S4 method for records,ANY,ANY,ANY [(x, i)  # S4 method for records,ANY,ANY,ANY [(x, i) <- value"},{"path":"https://docs.ropensci.org/rsat/reference/sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract or replace parts of an object — [,extent_crs,ANY,ANY,ANY-method","text":"x object extract element(s) replace element(s). numeric argument. position element select/modify. value records argument. slot records changed.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract or replace parts of an object — [,extent_crs,ANY,ANY,ANY-method","text":"returns selected value","code":""},{"path":"https://docs.ropensci.org/rsat/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter the satellite records of a records or an rtoi — subset,records-method","title":"Filter the satellite records of a records or an rtoi — subset,records-method","text":"Filter satellite records records rtoi","code":""},{"path":"https://docs.ropensci.org/rsat/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter the satellite records of a records or an rtoi — subset,records-method","text":"","code":"# S4 method for records subset(x, subset, select)"},{"path":"https://docs.ropensci.org/rsat/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter the satellite records of a records or an rtoi — subset,records-method","text":"x records rtoi object. subset character argument indicating name slot. select character value subsetting.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter the satellite records of a records or an rtoi — subset,records-method","text":"filtered records class","code":""},{"path":"https://docs.ropensci.org/rsat/reference/test_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing function — test_function","title":"Testing function — test_function","text":"Function used testing internal functions continuous integration.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/test_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing function — test_function","text":"","code":"test_function()"},{"path":"https://docs.ropensci.org/rsat/reference/test_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing function — test_function","text":"","code":"test_function() #> File md5:259F488AF82AA0E73716AC988E80312B #> Oficial md5:259f488af82aa0e73716ac988e80312b #> Return TRUE #> File md5:259F488AF82AA0E73716AC988E80312B #> Oficial md5:259f488af82aa0e73716ac988e80312b1 #> Return FALSE #> Extent:  #>  EPSG: NA #>  xmin: NA #>  ymin: NA #>  xmax: NA #>  ymax: NA #> Warning: GDAL Error 1: PROJ: proj_create_from_database: crs not found #> Extent:  #>  EPSG:  NA  #>  xmin:  2  #>  ymin:  1  #>  xmax:  1  #>  ymax:  1  #> Search query: https://cmr.earthdata.nasa.gov/search/granules?short_name=&point=2,1&equator_crossing_date=2021-11-01T10:00:00Z,2021-11-01T12:00:00Z&page_size=2000 #> Search query: https://cmr.earthdata.nasa.gov/search/granules?short_name=&bounding_box=1,1,1,1&equator_crossing_date=2021-11-01T10:00:00Z,2021-11-01T12:00:00Z&page_size=2000 #> Search query: https://cmr.earthdata.nasa.gov/search/granules?short_name=&bounding_box=1,1,1,1&equator_crossing_date=2021-11-01T10:00:00Z,2021-11-01T12:00:00Z&page_size=2000 #> Search query: https://cmr.earthdata.nasa.gov/search/granules?short_name=&bounding_box=-2.49908963576402,41.9095732069108,-0.726158447400539,43.3146327061922&equator_crossing_date=2021-11-01T10:00:00Z,2021-11-01T12:00:00Z&page_size=2000 #> Record:  #> sat: character #> name: character #> date: 2021-11-01 #> product: character #> path: 2 #> row: 1 #> tileid:  #> download: character #> file_path: character #> preview: character #> api_name:  #> order: FALSE"},{"path":"https://docs.ropensci.org/rsat/reference/tiles.mod.ndvi.filled.1.res.html","id":null,"dir":"Reference","previous_headings":"","what":"Result of IMA test 1 — tiles.mod.ndvi.filled.1.res","title":"Result of IMA test 1 — tiles.mod.ndvi.filled.1.res","text":"Filled image test package","code":""},{"path":"https://docs.ropensci.org/rsat/reference/tiles.mod.ndvi.filled.2.res.html","id":null,"dir":"Reference","previous_headings":"","what":"Result of IMA test 2 — tiles.mod.ndvi.filled.2.res","title":"Result of IMA test 2 — tiles.mod.ndvi.filled.2.res","text":"Filled image test package","code":""},{"path":"https://docs.ropensci.org/rsat/reference/unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract unique elements — unique,records,ANY-method","title":"Extract unique elements — unique,records,ANY-method","text":"returns records like x duplicate elements/rows removed.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract unique elements — unique,records,ANY-method","text":"","code":"# S4 method for records,ANY unique(x)"},{"path":"https://docs.ropensci.org/rsat/reference/unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract unique elements — unique,records,ANY-method","text":"x records object.","code":""},{"path":"https://docs.ropensci.org/rsat/reference/unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract unique elements — unique,records,ANY-method","text":"unique elements records class","code":""},{"path":"https://docs.ropensci.org/rsat/reference/unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract unique elements — unique,records,ANY-method","text":"","code":"if (FALSE) { # load example rtoi file.copy(from=system.file(\"ex/Navarre\",package=\"rsat\"),          to=tempdir(),          recursive = TRUE)  navarre <- read_rtoi(file.path(tempdir(),\"Navarre\"))  # get the records rcds <- records(navarre)  duplicate.records <- c(rcds[1],rcds[1]) length(duplicate.records) print(duplicate.records) single.record <- unique(duplicate.records) length(single.record) print(single.record) }"},{"path":[]},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"new-features-0-1-17","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rsat 0.1.17 (2021-12-13)","text":"Fixed minor bugs code Corrected examples manual Fixed vignettes","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"rsat-0116-2021-10-06","dir":"Changelog","previous_headings":"","what":"rsat 0.1.16 (2021-10-06)","title":"rsat 0.1.16 (2021-10-06)","text":"CRAN release: 2021-12-02","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"new-features-0-1-16","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rsat 0.1.16 (2021-10-06)","text":"Added support new landsat products: landsat_ot_c2_l2, landsat_ot_c2_l1, lsr_landsat_8_c1, landsat_8_c1,landsat_etm_c2_l2, landsat_etm_c2_l1, lsr_landsat_etm_c1, landsat_etm_c1, landsat_tm_c2_l2, landsat_tm_c2_l1, landsat_mss_c2_l1, lsr_landsat_tm_tm_c1, landsat_tm_c1, landsat_mss_c1","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"new-features-0-1-15","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rsat 0.1.15 (2021-09-09)","text":"Added database path global environment function set_database(\"character\") get_database() Added get_SpatRaster function get SpatRaster class terra package","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"minor-improvements-0-1-15","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rsat 0.1.15 (2021-09-09)","text":"Improved examples documentation added new datasets Added vignettes enumeration Improved performance search function Fixed warnings produced mosaic derive functions Updated sf objects last version Use terra package instead raster internally Improved stored rtoi files Added rsat section manual","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"bug-fixes-0-1-15","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rsat 0.1.15 (2021-09-09)","text":"Fixed error searching modis images Fixed unique function records Fixed rsat_list_data Fixed multiple errors around code","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"deprecated-and-defunct-0-1-15","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"rsat 0.1.15 (2021-09-09)","text":"Function name change sat_search() -> rsat_search() Function name change download() -> rsat_download() Function name change mosaic() -> rsat_mosaic() Function name change derive() -> rsat_derive() Function name change preview() -> rsat_preview() Function name change cloud_mask() -> rsat_cloudMask() Function name change smoothing_images() -> rsat_smoothing_images() Function name change list_data() -> rsat_list_data() Function name change get_raster() -> rsat_get_raster() Function name change get_stars() -> rsat_get_stars()","code":""},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"documentation-0-1-15","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION","title":"rsat 0.1.15 (2021-09-09)","text":"Added rsat package section Added examples several functions new datasets Improved documentation general Grouped functions one manual entry","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rsat/news/index.html","id":"new-features-0-1-14","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rsat 0.1.14 (2021-01-01)","text":"ROpenSci review version","code":""}]
